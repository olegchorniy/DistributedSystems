package kpi.ipt.labs.distributed.twophasecommit.service.impl;

import kpi.ipt.labs.distributed.twophasecommit.ConnectionInfo;
import kpi.ipt.labs.distributed.twophasecommit.transaction.TransactionHolder;
import kpi.ipt.labs.distributed.twophasecommit.transaction.jdbc.PgConnectionResource;

import java.sql.*;

final public class Utils {

    private Utils() {
    }

    public static PreparedStatement withAutoGeneratedKeys(Connection connection, String sql) throws SQLException {
        return connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
    }

    public static Connection getTransactionalConnection(ConnectionInfo connInfo) throws SQLException {
        Connection connection = getConnection(connInfo);

        TransactionHolder.enlistInCurrentTransaction(new PgConnectionResource(connection));
        return connection;
    }

    public static Connection getConnection(ConnectionInfo connInfo) throws SQLException {
        return DriverManager.getConnection(
                connInfo.getUrl(),
                connInfo.getUsername(),
                connInfo.getPassword()
        );
    }

    public static int extractGeneratedId(String idColumnName, PreparedStatement insertStmt) throws SQLException {
        ResultSet generatedKeys = insertStmt.getGeneratedKeys();
        if (generatedKeys.next()) {
            return generatedKeys.getInt(idColumnName);
        }

        throw new IllegalStateException("Generated key couldn't be obtained");
    }

    public static Date toSqlDate(java.util.Date date) {
        if (date == null) {
            return null;
        }

        return new Date(date.getTime());
    }
}
